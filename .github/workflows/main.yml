name: Unit Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Install cd-hit (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y cd-hit

    - name: Install mmseqs2 (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y mmseqs2

    - name: Install cd-hit (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install cd-hit  # Example, you might need to provide a custom installation script if not available in Chocolatey

    - name: Install mmseqs2 (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install mmseqs2  # Example, you might need to provide a custom installation script if not available in Chocolatey

    - name: Run Tests
      run: pytest tests
      env:
        HYPOTHESIS_DEADLINE: 10000000
        MPLBACKEND: Agg
